server:
  port: 9001
  tomcat:
    # How long to wait before receiving data from client after establishing a TCP connection
    connection-timeout: 2s 
    # How long to wait before new HTTP request comes from the client.
    keep-alive-timeout: 15s
    # This a local configuration. In a production scenario this will be externalized.
    threads:
      max: 50
      min-spare: 5
polar:
  greeting: Welcome to the local polar book catalog!
spring:
  application:
    name: catalog-service
  config:
    import: "optional:configserver:"
    request-connection-timeout: 500 # milli seconds
    request-read-timeout: 500 # milli seconds
    fail-fast: true
    retry:
      max-attempts: 6
      initial-interval: 1000 # milli seconds
      max-interval: 2000 # mille seconds
      multiplier: 1.1
  cloud:
    config:
      uri: http://localhost:8888
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000 # milli seconds
      maximum-pool-size: 5
  sql:
    init:
      mode: always
management:
  endpoints:
    web:
      exposure:
        include: refresh
